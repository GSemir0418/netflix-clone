// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  // mongodb 使用了 ObjectId 类型来描述 id 字段
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  image String?
  email String? @unique
  emailVerified DateTime?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favoriteIds String[] @db.ObjectId
  sessions Session[]
  accounts Account[]
}

// 第三方账户的数据模型
model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String // 第三方登录通常为 'oauth'
  provider String // 'github' | 'google'
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String // yes
  expires_at Int?
  token_type String? // 'bearer'
  scope String? // yes
  id_token String? @db.String
  session_state String?

  // 表示 userId 关联 user 表的 id 字段，
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  // 联合唯一约束，表示在此表中两个字段的组合是唯一的
  @@unique([provider, providerAccountId])
}

model Session {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String @unique
  userId String @db.ObjectId
  expires DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token String @unique
  expires DateTime

  @@unique([identifier, token])
}

model Movie {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  videoUrl String
  thumbnailUrl String
  genre String
  duration String
}